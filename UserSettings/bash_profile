# ~/.bashrc: executed by bash(1) for non-login shells.

# Note: PS1 and umask are already set in /etc/profile. You should not
# need this unless you want different defaults for root.
# PS1='${debian_chroot:+($debian_chroot)}\h:\w\$ '
# umask 022

# You may uncomment the following lines if you want `ls' to be colorized:
# export LS_OPTIONS='--color=auto'
# eval "`dircolors`"
# alias ls='ls $LS_OPTIONS'
# alias ll='ls $LS_OPTIONS -l'
# alias l='ls $LS_OPTIONS -lA'
#
# Some more alias to avoid making mistakes:

# @mistake files
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# @prompt simple
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\u @ VM_1 - 2222 \[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# @opti permissions
alias chx="chmod 755"
alias chr="chmod 644"

# @opti conf
alias SB="emacs ~/.bashrc; source ~/.bashrc"
alias SE="emacs ~/.emacs.d/init.el"

# @opti basic
alias e="emacs"
alias j="jobs"
alias c="cat"
alias g="git"
alias sv="service"
alias cu="curl"

# @opti docker
alias dk="docker"
alias DC="docker-compose"
alias DCB="docker-compose build"
alias DCU="docker-compose up -d"
alias DRB="docker-compose up -d --build; ./init_databases.sh --deploy"
alias REB="DCB && DCU && ./init_databases.sh --deploy"
alias RUI="remove_untagged_images"

# @ls tunings
alias ls="ls --color"
alias l="ls"
alias ll="ls -l"
alias la="ls -a"

function lc() {
    cd $1
    ls
}

# @output management
alias L=" | less"


# @miscellianous
alias ".."="cd .."
alias travel_in_paris="python /THEO/parikstra/parikstra.py"
alias TU="top_used_commands"

function top_used_commands() { # prints the top 15 typed commands
    history | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' | grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head -n15
}

function space_left () { # prints the space left on the machine
    echo "Device         Total  Used  Free  Pct MntPoint"
    df -h | grep "/dev/sd"
    df -h | grep "/mnt"
}

# Useless on VM
#function myinfo () {
#    printf "CPU: "
#    cat /proc/cpuinfo | grep "model name" | head -1 | awk '{ for (i = 4; i <= NF; i++) printf "%s ", $i }'
#    printf "\n"
#    cat /etc/issue | awk '{ printf "OS: %s %s %s %s | " , $1 , $2 , $3 , $4 }'
#    uname -a | awk '{ printf "Kernel: %s " , $3 }'
#    uname -m | awk '{ printf "%s | " , $1 }'
#    kded4 --version | grep "KDE Development Platform" | awk '{ printf "KDE: %s", $4 }'
#    printf "\n"   uptime | awk '{ printf "Uptime: %s %s %s", $3, $4, $5 }' | sed 's/,//g'
#    #printf "\n"   cputemp | head -1 | awk '{ printf "%s %s %s\n", $1, $2, $3 }'
#    #cputemp | tail -1 | awk '{ printf "%s %s %s\n", $1, $2, $3 }'   #cputemp | awk '{ printf "%s %s", $1 $2 }' }'""''""''""''""''""''""''""''""}'
#}
export WINDOWS="10.0.2.2"
