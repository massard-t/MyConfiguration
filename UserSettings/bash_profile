# ~/.bashrc made by Theo Massard

# @env variables
export GITHUB_CONFIG=/THEO/github/MyConfiguration/
export HISTFILESIZE=20000
export HISTSIZE=10000
export HISTIGNORE="&:ls:[bf]g:exit"
export GOPATH=~/work
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOBIN

# @z opti cd
. ~/.z_config/z.sh

# @history management
shopt -s histappend
shopt -s cmdhist

# @mistake files
alias rm='rm -i' # @M.F
alias cp='cp -i' # @M.F
alias mv='mv -i' # @M.F

# @prompt simple
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\u @ VM_1 - 2222 \[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# @opti permissions
alias chx="chmod 755" # @O.P
alias chr="chmod 644" # @O.P

function opti_perm() {
    {
	echo "permission optimisation:"
	echo "chx     = chmod 755"
	echo "chr     = chmod 644"
    }
}

# @opti conf
alias SB="emacs ~/.bashrc; source ~/.bashrc" # @O.C
alias SE="emacs ~/.emacs.d/init.el" # @O.C

function opti_config() {
    {
	echo "configuration optimisation:"
	echo "SB    = \"emacs ~/.bashrc; source ~/.bashrc\""
	echo "SE    = \"emacs ~/.emacs.d/init.el\""
    }
}

# @opti basic
alias e="emacs" # @O.B
alias j="jobs" # @O.B
alias c="cat" # @O.B
alias g="git" # @O.B
alias sv="service" # @O.B
alias cu="curl" # @O.B
alias root='sudo -i' # @O.B Become root
alias h="history" # @O.B

function opti_basic_info() {
    {
	echo "basic optimisation aliases:"
	echo "e    = emacs"
	echo "j    = jobs"
	echo "c    = cat"
	echo "g    = git"
	echo "sv   = service"
	echo "cu   = curl"
	echo "root = sudo -i"
    }
}

function wtfaliases() {
    echo "Your aliases that contains the tag $1 are:"
    pygmentize -g ~/.bashrc | grep -i $1
}

# @opti docker
alias dk="docker" # @O.D
alias DC="docker-compose" # @O.D
alias DCB="docker-compose build" # @O.D
alias DCU="docker-compose up -d" # @O.D
alias DRB="docker-compose up -d --build; ./init_databases.sh --deploy" # @O.D
alias REB="DCB && DCU && ./init_databases.sh --deploy" # @O.D
alias RUI="remove_untagged_images" # @O.D

function opti_docker() {
    {
	echo "docker optimisation aliases:"
	echo "dk    = docker"
	echo "DC    = docker-compose"
	echo "DCB   = docker-compose build"
	echo "DCU   = docker-compose up -d"
	echo "DRB   = docker-compose up -d; ./init-databses.sh --deploy"
	echo "REB   = DCB && DCU && ./init_databases.sh --deploy"
	echo "RUI   = remove_untagged_images"
    }
}

# @ls tunings
alias ls="ls --color" # @LS
alias l="ls" # @LS
alias ll="ls -l" # @LS
alias la="ls -a" # @LS
alias lsh='ls -lhXG' # @LS long listing, human-readable, sort by extension, do not show group info

function ls_aliases() {
    {
	echo "ls aliases:"
	echo "ls   = ls --color"
	echo "l    = ls"
	echo "la   = ls -a"
	echo "lsh  = ls -lhXG (long listing, sorts by extension, no group info)"
    }
}

function lc() {
    cd $1
    ls
}

# @output management
alias less='less -FSRX' # @O.M
alias G=" | grep" # @O.M

# @network
alias ports="netstat -tulanp" # shows open ports

# @github general
alias ga="git add" # @G.G
alias gp="git push" # @G.G
alias gc="git commit -m" # @G.G
alias gl="git pull" # @G.G
alias gs="git status" # @G.G
alias gst="git status" # @G.G

function github_general() {
    {
	echo "optimisation github general:"
	echo "ga   = git add"
	echo "gp   = git push"
	echo "gc   = git commit -m"
	echo "gl   = git pull"
	echo "gs   = git status"
    }
}

# @github user
alias save_bash="cp ~/.bashrc $GITHUB_CONFIG/UserSettings/bash_profile; cd $GITHUB_CONFIG;" # @G.U
alias save_inputrc="cp ~/.inputrc $GITHUB_CONFIG/UserSettings/inputrc; cd $GITHUB_CONFIG;" # @G.U
alias save_git_stars="python /THEO/github/starred/starred.py --username massard-t --sort" # @G.U

function github_user() {
    {
	echo "optimisation github user:"
	echo "save_bash     = cp ~/.bashrc $GITHUB_CONFIG/UserSettings/bash_profile; cd $GITHUB_CONFIG"
	echo "save_inputrc  = cp ~/.inputrc $GITHUB_CONFIG/UserSettings/inputrc; cd $GITHUB_CONFIG"
	echo "save_git_stars= python /THEO/github/starred/starred.py --username massard-t --sort"
    }
}

# @miscellianous
alias ".."="cd .."
alias travel_in_paris="python /THEO/parikstra/parikstra.py"
alias TU="top_used_commands"

function top_used_commands() { # prints the top 15 typed commands
    history | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' | grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head -n15
}

function space_left() { # prints the space left on the machine
    echo "Device         Total  Used  Free  Pct MntPoint"
    df -h | grep "/dev/sd"
    df -h | grep "/mnt"
}

function get_uptime() { # pretty prints uptime
    uptime | awk '{ print "Uptime:", $3, $4, $5 }' | sed 's/,//g'
    return;
}

function f_string_in_files() {
    find . -type f -iname "$2" -exec grep -l "$1" {} +
}

function small_clock() {
    while true; do clear;echo "===========";date +"%r";echo "===========";sleep 1;done
}
# Useless on VM
#function myinfo () {
#    printf "CPU: "
#    cat /proc/cpuinfo | grep "model name" | head -1 | awk '{ for (i = 4; i <= NF; i++) printf "%s ", $i }'
#    printf "\n"
#    cat /etc/issue | awk '{ printf "OS: %s %s %s %s | " , $1 , $2 , $3 , $4 }'
#    uname -a | awk '{ printf "Kernel: %s " , $3 }'
#    uname -m | awk '{ printf "%s | " , $1 }'
#    kded4 --version | grep "KDE Development Platform" | awk '{ printf "KDE: %s", $4 }'
#    printf "\n"   uptime | awk '{ printf "Uptime: %s %s %s", $3, $4, $5 }' | sed 's/,//g'
#    #printf "\n"   cputemp | head -1 | awk '{ printf "%s %s %s\n", $1, $2, $3 }'
#    #cputemp | tail -1 | awk '{ printf "%s %s %s\n", $1, $2, $3 }'   #cputemp | awk '{ printf "%s %s", $1 $2 }' }'""''""''""''""''""''""''""''""}'
#}
export WINDOWS="10.0.2.2"
function bashtips {
    {
	echo "DIRECTORIES"
	echo "-----------"
	echo "~-  	Previous working directory"
	echo "pushd tmp   Push tmp && cd tmp"
	echo "popd    	Pop && cd"
	echo ""
	echo "GLOBBING AND OUTPUT SUBSTITUTION"
	echo "--------------------------------"
	echo "ls a[b-dx]e Globs abe, ace, ade, axe"
	echo "ls a{c,bl}e Globs ace, able"
	echo "\$(\ls)  	\`ls\` (but nestable!)"
	echo ""
	echo "HISTORY MANIPULATION"
	echo "--------------------"
	echo "!!  	Last command"
	echo "!?foo   	Last command containing \`foo'"
	echo "^foo^bar^   Last command containing \`foo', but substitute \`bar'"
	echo "!!:0    	Last command word"
	echo "!!:^    	Last command's first argument"
	echo "!\$ 	Last command's last argument"
	echo "!!:*    	Last command's arguments"
	echo "!!:x-y  	Arguments x to y of last command"
	echo "C-s 	search forwards in history"
	echo "C-r 	search backwards in history"
	echo ""
	echo "LINE EDITING"
	echo "------------"
	echo "M-d 	kill to end of word"
	echo "C-w 	kill to beginning of word"
	echo "C-k 	kill to end of line"
	echo "C-u 	kill to beginning of line"
	echo "M-r 	revert all modifications to current line"
	echo "C-] 	search forwards in line"
	echo "M-C-]   	search backwards in line"
	echo "C-t 	transpose characters"
	echo "M-t 	transpose words"
	echo "M-u 	uppercase word"
	echo "M-l 	lowercase word"
	echo "M-c 	capitalize word"
	echo ""
	echo "COMPLETION"
	echo "----------"
	echo "M-/ 	complete filename"
	echo "M-~ 	complete user name"
	echo "M-@ 	complete host name"
	echo "M-\$    	complete variable name"
	echo "M-! 	complete command name"
	echo "M-^ 	complete history"
    }
}
